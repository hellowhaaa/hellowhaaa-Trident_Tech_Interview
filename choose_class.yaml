openapi: 3.1.1
info:
  title: Course Selection System
  version: 1.0.0
  summary: Course Selection APIs
  description: |
    The Course Selection System API provides endpoints for students and teachers to interact with the course selection process.

    ## Features:
    - **Students** can:
      - Register and log in
      - View available courses
      - Enroll in courses
      - Drop courses
    
    - **Teachers** can:
      - Log in
      - Add new courses
      - Delete existing courses
      - Manage enrolled students

servers:
  - url: https://api.example.com/v1
    description: 正式環境
  - url: https://api.stagi
    description: 測試環境

paths:
  /:
    get:
      operationId: root
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "hello, world"

  /courses:
    get:
      description: Return all courses.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CoursesResponse"
  /teachers:
    get:
      description: Return all teachers' information
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CourseResponse"
              examples:
                example1:
                  summary: "Example with one teacher"
                  value:
                    datas:
                      - teacherID: 123
                        name: "Ben"
                        email: "Ben123@gmail.com"
                example2:
                  summary: "Example with two teachers"
                  value:
                    datas:
                      - teacherID: 123
                        name: "Ben"
                        email: "Ben123@gmail.com"
                      - teacherID: 456
                        name: "Nana"
                        email: "Nana@gmail.com"
               

      




components:
  schemas:
    CoursesResponse:
      type: object
      properties:
        datas:
          type: array
          description: List of all courses
          items:
            $ref: "#/components/schemas/Course"
      
    Course:
      type: object
      properties:
        courseID:
          type: integer
          example: 123
        courseName:
          type: string
          example: "Improve your English"
        startTime:
          type: integer
          example: 1234
        endTime:
          type: integer
          example: 1234
        maxPeople: 
          type: integer
          example: 10
        teacherID:
          type: integer
          example: 123
        teacherName:
          type: string
          example: "Lily"
        teacherEmail: 
          type: string
          example: "Lily@gamil.com"

    TeachersResponse:
      type: object
      properties:
        datas:
          type: array
          description: List of all teachers
          items:
            $ref: "#/components/schemas/Teacher"

    Teacher:
      type: object
      properties:
        teacherID:
          type: integer
          example: 123
        name:
          type: string
          example: "Ben"
        email:
          type: string
          example: "Ben123@gamil.com"




     
